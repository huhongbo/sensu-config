<% unless node["platform"] == "ubuntu" %>
#!/usr/bin/sh
<% else %>
#!/bin/sh
<% end %>

<% if node["platform"] == "aix" %>
prog_sensu="ruby"
<% else %>
prog_sensu="sensu-client"
<% end %>

<% if node["platform"] == "aix" %>
client_path="/opt/freeware/ruby1.9/bin/sensu-client"
<% elsif node["platform"] == "hpux" %>
client_path="/usr/local/ruby1.9/bin/sensu-client"
<% else %>
client_path="sensu-client"
<% end %>

prog="sensu-client"
logfile="/var/log/$prog.log"
<% unless node["platform"] == "aix" %>
pidfile="/var/run/$prog.pid"
<% else %>
pidfile="/var/chef/run/$prog.pid"
<% end %>

var=$(ps -ef | grep $prog_sensu | grep -v grep | wc -l)
pid=$(ps -ef | grep $prog_sensu |grep -v grep | awk '{print $2}')
CPID=$(cat $pidfile)
CPID_FILE="/proc/$CPID"
pid_id_file="/proc/$pid"

<% unless node["platform"] == "aix" %>
start()
{
	if [ -f $pidfile ]; then
		PSPID=`ps -p $CPID|grep $prog|wc -l`
		if [ $PSPID = 0 ]; then
			echo "$prog start ..."
			$client_path -b -l $logfile -p $pidfile
		else
			echo "$prog running ..."
		fi
	else
		if [ $var = 0 ]; then
			echo "$prog start ..."
			$client_path -b -l $logfile -p $pidfile
		else	
			echo "$prog running"
		fi
	fi
}
<% else %>
start()
{
	if [ -f $pidfile ];then
		if [ -d "$CPID_FILE" ]; then
			echo "$prog is running"
		else
			echo "$prog start ..."
			$client_path -b -l $logfile -p $pidfile
		fi
	else
		if [ -d "pid_id_file" ]; then
			echo "$pidfile not find, $prog runing add pid file"
			echo "$pid" > $pidfile
		else
			echo "$prog start ..."
			$client_path -b -l $logfile -p $pidfile
		fi
	fi
}
<% end %>


status()
{
	if [ $var = 0 ]; then
		echo "$prog is false"
	else
		echo "$prog is running"
	fi
}

<% unless node["platform"] == "aix" %>
stop_sensu()
{
	if [ $var = 0 ]; then
		echo "$prog is false"	
	else
		echo "$prog stop"
		kill -9 $pid &&
		rm -f $logfile
	fi
}
<% else %>
stop_sensu()
{
	if [ -f $pidfile ]; then
		echo "$prog stopped"
		kill -9 $CPID &&
		rm -f $logfile
	else
		echo "$prog not running"
	fi
}
<% end %>

restart_sensu() {
	stop_sensu
	sleep 2
	start
}

case $1 in
	'start')
		start
		;;
	'status')
		status
		;;
	'stop')
		stop_sensu
		;;
	'restart')
		restart_sensu
		;;
	*)
		echo "Usage: $0 {start|stop|status|restart}"
		;;
esac

exit $?
