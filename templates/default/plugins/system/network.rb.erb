#!/usr/bin/env ruby

# network interface
# code dn365

require 'rubygems' if RUBY_VERSION < '1.9.0'
require 'sensu-plugin/metric/cli'
require 'socket'
require 'sigar'

class InterfaceGraphite < Sensu::Plugin::Metric::CLI::Graphite

  option :scheme,
    :description => "Metric naming scheme, text to prepend to metric",
    :short => "-s SCHEME",
    :long => "--scheme SCHEME",
    :default => "#{Socket.gethostname}.interface"

  def run
    dname = "system.interface"

    sigar = Sigar.new
      iflist = sigar.net_interface_list

      iflist.each do |ifname|
        ifconfig = sigar.net_interface_config(ifname)
        flags = ifconfig.flags
        #encap = ifconfig.type

        if (flags & Sigar::IFF_UP) == 0
          next
        end

        if (!ifname.include?(":"))
          ifstat = sigar.net_interface_stat(ifname)
          
          rx_bytes = ifstat.rx_bytes
          tx_bytes = ifstat.tx_bytes

          mate = {
              ifname =>{
                  :rx_Bytes => rx_bytes.to_i,
                  :tx_Bytes => tx_bytes.to_i
              }
          }
          timestamp = Time.now.to_i
          mate.each do |name, key|
            key.each do |child, value|
              output [<% if node["system"] == nil %>"Zmcc",<% else %><% unless node["system"]["Business"] != nil %>"Zmcc", <% else %>"<%= node["system"]["Business"] %>",<% end %><% end %>config[:scheme],dname,name,child].join("."), value, timestamp
            end
          end
        end
      end
      ok
  end
end
